/* --------------------------------

File#: _2_drawer-navigation
Title: Drawer Navigation
Descr: Header template with drawer navigation
Usage: codyhouse.co/license

-------------------------------- */
.sign-menu{
  text-decoration: none;

}
:root {
  --dr-nav-header-height: 54px;
  --dr-nav-logo-size: 48px;
}

@include breakpoint(md) {
  :root {
    --dr-nav-header-height: 70px;
    --dr-nav-logo-size: 54px;
  }
}

// header
.dr-nav-header {
  height: var(--dr-nav-header-height);
  // position: fixed;
  position: absolute;

  top: 0;
  z-index: var(--zindex-header);
  width: 100%;
  .radio-switch {
    // style
    --radio-switch-width: 72px;
    --radio-switch-height: 32px;
    --radio-switch-padding: 3px;
    --radio-switch-radius: 50em;

    // animation
    --radio-switch-animation-duration: 0.3s;
  }

  .radio-switch__marker {
    background-color: var(--color-contrast-high);
  }

  .radio-switch__input:checked ~ .radio-switch__label {
    color: var(--color-bg); // icon color active
  }
}

// logo
.dr-nav-header__logo {
  display: block;
  position: absolute;
  left: calc(50% - var(--dr-nav-logo-size)/2);
  top: calc(50% - var(--dr-nav-logo-size)/2);
  width: var(--dr-nav-logo-size);
  height: var(--dr-nav-logo-size);
  text-decoration: none;
  color: var(--color-contrast-high); // logo color
  transition: .3s;

  svg {
    display: block;
    width: inherit;
    height: inherit;
  }

  &:hover {
    color: var(--color-contrast-higher);
  }
}

// nav control - menu button
.dr-nav-control-wrapper {
  position: fixed;
  z-index: var(--zindex-overlay);
  top: 0;
  left: 0;
  height: var(--dr-nav-header-height);
  width: 100%;
  pointer-events: none;
}

.dr-nav-control {
  --anim-menu-btn-size: 48px;
  // üçî icon
  --anim-menu-btn-icon-size: 24px;
  --anim-menu-btn-icon-stroke: 2px;
  pointer-events: auto;
  position: relative;
  cursor: pointer;
  border-radius: 50%;
  transition: transform .3s var(--ease-in-out);
  color: var(--color-contrast-high); // icon color

  circle {
    display: none;
  }

  &.anim-menu-btn--state-b {
    transform: rotate(180deg);
  }

  &:hover .dr-nav-control__bg {
    fill: var(--color-contrast-lower);
    opacity: 1;
  }
}

.dr-nav-control__bg { // SVG used to set background color and animated stroke
  display: block;
  fill: var(--color-bg); // button background color
  stroke-width: 1.5;
  stroke: var(--color-contrast-low); // stroke color
  opacity: 0.95;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  transition: .2s;
}

.dr-nav-control--ready-to-animate circle {
  display: block;
  transition: stroke-dashoffset 0.3s 0s;
}

.dr-nav-control.anim-menu-btn--state-b circle {
  stroke-dashoffset: 0;
  transition-delay: 0.3s;
}

// drawer
.dr-nav-drawer-header {
  display: flex;
  align-items: center;
  flex-shrink: 0;
  height: var(--dr-nav-header-height);
}

.dr-nav__link {
  display: flex;
  align-items: center;
  justify-content: space-between;
  text-decoration: none;
  padding: var(--space-xxxs) 0;
  color: var(--color-contrast-medium);
  transition: .3s;

  :nth-child(2)::before {
    content: '';
    display: inline-block;
    height: 1px;
    width: 32px;
    margin-right: var(--space-xs);
    background-color: currentColor;
    vertical-align: middle;
    transform: scaleX(0);
    transform-origin: right center;
    transition: transform .3s var(--ease-out);
  }

  &:hover {
    color: var(--color-contrast-high);

    :nth-child(2)::before {
      transform: scaleX(1);
    }
  }
}


/* --------------------------------

File#: _1_radio-switch
Title: Radio Switch
Descr: Custom radio toggle
Usage: codyhouse.co/license

-------------------------------- */

:root {
  // style
  --radio-switch-width: 186px;
  --radio-switch-height: 46px;
  --radio-switch-padding: 3px;
  --radio-switch-radius: 50em;

  // animation
  --radio-switch-animation-duration: 0.3s;
}

.radio-switch {
  position: relative;
  display: inline-block; // flexbox fallback
  display: inline-flex;
  padding: var(--radio-switch-padding);
  border-radius: calc(var(--radio-switch-radius) * 1.4);
  background-color: var(--color-contrast-lower);

  &:focus-within, &:active {
    box-shadow: 0 0 0 2px var(--color-contrast-low); // focus effect
  }
}

.radio-switch__item {
  position: relative;
  display: inline-block; // flexbox fallback
  height: calc(var(--radio-switch-height) - 2*var(--radio-switch-padding));
  width: calc(var(--radio-switch-width)*0.5 -  var(--radio-switch-padding));
}

.radio-switch__label {
  position: relative;
  z-index: 2;
  display: flex;
  height: 100%;
  align-items: center;
  justify-content: center;
  border-radius: var(--radio-switch-radius);
  cursor: pointer;
  font-size: var(--text-sm);
  user-select: none;
  transition: all var(--radio-switch-animation-duration);

  .radio-switch__input:checked ~ & {
    color: var(--color-white);
  }

  .radio-switch__input:focus ~ & { // focus effect in browsers not supporting :focus-within
    background-color: lightness(var(--color-primary), 0.6);
  }

  :not(*):focus-within, // trick to detect :focus-within support -> https://css-tricks.com/using-feature-detection-conditionals-and-groups-with-selectors/
  .radio-switch__input:focus ~ & { // reset focus style for browsers supporting :focus-within
    background-color: transparent;
  }
}

.radio-switch__marker {
  position: absolute;
  z-index: 1;
  top: 0;
  left: -100%;
  border-radius: var(--radio-switch-radius);
  background-color: var(--color-primary);
  height: calc(var(--radio-switch-height) - 2*var(--radio-switch-padding));
  width: calc(var(--radio-switch-width)*0.5 -  var(--radio-switch-padding));
  box-shadow: var(--shadow-md);
  transition: transform var(--radio-switch-animation-duration);

  .radio-switch__input:checked ~ & {
    transform: translateX(100%);
  }
}

/* --------------------------------

File#: _1_drawer
Title: Drawer
Descr: A slide-in panel used to display critical content
Usage: codyhouse.co/license

-------------------------------- */

:root {
  --drawer-width: 400px;
}

.drawer {
  position: fixed;
  z-index: var(--zindex-overlay);

  height: 100%;
  width: 100%;
  max-width: var(--drawer-width);
  top: 0;
  right: 0;

  // hide drawer
  visibility: hidden;
  transition: visibility 0s 0.3s;

  &:focus {
    outline: none;
  }
}

.drawer--is-visible {
  visibility: visible;
  transition: none;
}

.drawer--open-left {
  right: auto;
  left: 0;
}

.drawer__content {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  right: 0;

  transform: translateX(100%);

  transition: transform 0.3s;
  transition-timing-function: var(--ease-in-out);

  .drawer--open-left & {
    transform: translateX(-100%);
  }

  .drawer--is-visible & {
    transform: translateX(0);
  }
}

.drawer__body { // scrollable area
  height: 100%;
  overflow: auto;
  overscroll-behavior: contain;
  -webkit-overflow-scrolling: touch; // smooth scroll on iOS
}

.drawer__close-btn {
  width: 32px;
  height: 32px;

  flex-shrink: 0;
  display: flex;
  justify-content: center;
  align-items: center;

  border-radius: 50%;
  background-color: alpha(var(--color-bg), 0.95);
  box-shadow: var(--shadow-sm);
  transition: .2s;

  &:hover {
    background-color: var(--color-bg);
    box-shadow: var(--shadow-md);
  }

  .icon {
    display: block;
    color: var(--color-contrast-high);
  }
}

// --modal
.drawer--modal {
  max-width: none;
  background-color: alpha(var(--color-contrast-higher), 0);
  transition: background-color 0.3s, visibility 0s 0.3s;

  &.drawer--is-visible {
    background-color: alpha(var(--color-contrast-higher), 0.75);
    transition: background-color 0.3s;
  }

  &.drawer--open-left .drawer__content {
    right: auto;
    left: 0;
  }

  .drawer__content {
    max-width: var(--drawer-width);
  }
}


/* --------------------------------

File#: _1_search-input
Title: Search input
Descr: Search input field with custom button
Usage: codyhouse.co/license

-------------------------------- */
:root {
  --search-input-btn-width: 2.5em;
  --search-input-icon-size: 1.25em;
}

.search-input {
  position: relative;
}

.search-input__input {
  width: 100%;
  height: 100%;

  &::-webkit-search-decoration,
  &::-webkit-search-cancel-button,
  &::-webkit-search-results-button,
  &::-webkit-search-results-decoration {
    -webkit-appearance:none;
  }

  &::-ms-clear,
  &::-ms-reveal {
    display: none;
    width: 0;
    height: 0;
  }

  .search-input--icon-right & {
    padding-right: var(--search-input-btn-width);
  }

  .search-input--icon-left & {
    padding-left: var(--search-input-btn-width);
  }
}

.search-input__btn {
  @include reset;
  position: absolute;
  top: 0;
  right: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
  width: var(--search-input-btn-width);

  &:active .icon {
    transform: translateY(2px);
  }

  .icon {
    display: block;
    width: var(--search-input-icon-size);
    height: var(--search-input-icon-size);
    margin-left: auto;
    margin-right: auto;
    color: var(--color-contrast-medium); // icon color
    transition: .2s;
  }

  .search-input--icon-left & {
    left: 0;
    right: auto;
    pointer-events: none;
  }
}

.search-input__btn:focus .icon,
.search-input .search-input__input:focus + .search-input__btn .icon {
  color: var(--color-primary); // active icon color
}


/* --------------------------------

File#: _1_anim-menu-btn
Title: Animated Menu Button
Descr: A menu button w/ a morphing icon
Usage: codyhouse.co/license

-------------------------------- */

:root {
  --anim-menu-btn-size: 48px;
  --anim-menu-btn-transition-duration: .2s;

  // üçî icon
  --anim-menu-btn-icon-size: 32px;
  --anim-menu-btn-icon-stroke: 2px;
}

.anim-menu-btn {
  display: flex;
  justify-content: center;
  align-items: center;
  width: var(--anim-menu-btn-size);
  height: var(--anim-menu-btn-size);
  background-color: white;
}

// icons
.anim-menu-btn__icon {
  position: relative;
  display: block;
  font-size: var(--anim-menu-btn-icon-size);
  width: 1em;
  height: var(--anim-menu-btn-icon-stroke);
  color: inherit;
  background-image: linear-gradient(currentColor, currentColor);
  background-repeat: no-repeat;
  transform: scale(1);

  &::before, &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background-image: inherit;
    border-radius: inherit;
  }
}

// menu to 'X' close
.anim-menu-btn__icon--close {
  background-size: 100% 100%;
  will-change: transform, background-size;
  transition-property: transform, background-size;
  transition-duration: var(--anim-menu-btn-transition-duration, 0.2s);

  .anim-menu-btn:active & {
    transform: scale(0.9);
  }

  &::before, &::after {
    will-change: inherit;
    transition: inherit;
  }

  &::before { // line top
    transform: translateY(-0.25em) rotate(0);
  }

  &::after { // line bottom
    transform: translateY(0.25em) rotate(0);
  }
}

.anim-menu-btn--state-b {
  .anim-menu-btn__icon--close {
    background-size: 0% 100%;

    &::before {
      transform: translateY(0) rotate(45deg);
    }

    &::after {
      transform: translateY(0) rotate(-45deg);
    }
  }
}

// menu to arrow
.anim-menu-btn__icon--arrow-left,
.anim-menu-btn__icon--arrow-right,
.anim-menu-btn__icon--arrow-up,
.anim-menu-btn__icon--arrow-down {
  border-radius: 50em;
  will-change: transform;
  transition-property: transform;
  transition-duration: var(--anim-menu-btn-transition-duration, 0.2s);

  .anim-menu-btn:active & {
    transform: scale(0.9);
  }

  &::before, &::after {
    transform-origin: calc(var(--anim-menu-btn-icon-stroke)/2) 50%;
    will-change: transform, width;
    transition-property: transform, width;
    transition-duration: var(--anim-menu-btn-transition-duration, 0.2s);
  }

  &::before { // line top
    transform: translateY(-0.25em) rotate(0);
  }

  &::after { // line bottom
    transform: translateY(0.25em) rotate(0);
  }
}

.anim-menu-btn__icon--arrow-right {
  transform: rotate(180deg);

  .anim-menu-btn:active & {
    transform: rotate(180deg) scale(0.9);
  }
}

.anim-menu-btn--state-b {
  .anim-menu-btn__icon--arrow-left,
  .anim-menu-btn__icon--arrow-right,
  .anim-menu-btn__icon--arrow-up,
  .anim-menu-btn__icon--arrow-down {
    &::before, &::after {
      width: 50%;
    }

    &::before {
      transform: translateY(0) rotate(-45deg);
    }

    &::after {
      transform: translateY(0) rotate(45deg);
    }
  }

  &:active .anim-menu-btn__icon--arrow-up {
    transform: rotate(90deg) scale(0.9);
  }

  .anim-menu-btn__icon--arrow-up {
    transform: rotate(90deg);
  }

  &:active .anim-menu-btn__icon--arrow-down {
    transform: rotate(-90deg) scale(0.9);
  }

  .anim-menu-btn__icon--arrow-down {
    transform: rotate(-90deg);
  }
}


// .space{
//   position: absolute;
// }